{"remainingRequest":"/Users/finup/WebstormProjects/front-test-platform/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/finup/WebstormProjects/front-test-platform/src/views/ServerManagement/ServerManagement.vue?vue&type=style&index=0&id=ea3a8676&lang=scss&scoped=true&","dependencies":[{"path":"/Users/finup/WebstormProjects/front-test-platform/src/views/ServerManagement/ServerManagement.vue","mtime":1648538970443},{"path":"/Users/finup/WebstormProjects/front-test-platform/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/finup/WebstormProjects/front-test-platform/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/finup/WebstormProjects/front-test-platform/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/finup/WebstormProjects/front-test-platform/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/finup/WebstormProjects/front-test-platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/finup/WebstormProjects/front-test-platform/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAifkAvYXNzZXRzL3Njc3MvdGVzdENhc2Uuc2NzcyI7Cg=="},{"version":3,"sources":["ServerManagement.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgJA","file":"ServerManagement.vue","sourceRoot":"src/views/ServerManagement","sourcesContent":["<template>\n  <div class=\"testCase\">\n    <common-table :table-label=\"tableLabel\" :table-data=\"tableData\" :config=\"config\"\n                  :is-show-table=\"isShowTable\" :right-width=\"rightWidth\" @apiDelete=\"apiDelete\" @apiTest=\"apiTest\">\n    </common-table>\n  </div>\n</template>\n<script>\nimport CommonTable from \"@/components/CommonTable\";\nimport {\n  getApiList,\n  delApiById\n} from '@/api/apiTest'\n\nexport default {\n  components: {\n    CommonTable\n  },\n  data() {\n    return {\n      isShowTable: true,\n      rightWidth: '260',\n      tableData: [],\n      config: {\n        page: 1,\n        total: 1,\n        size: 10,\n        loading: false\n      },\n      tableLabel: [\n        {\n          prop: 'is_implement',\n          label: '执行',\n          width: 50\n        },\n        {\n          prop: 'case_serial',\n          label: '用例编号',\n          width: 80\n        },\n        {\n          prop: 'case_name',\n          label: '用例名称',\n          width: 120\n        },\n        {\n          prop: 'module_name',\n          label: '模块名称',\n          width: 80\n        },\n        {\n          prop: 'request_type',\n          label: '类型',\n          width: 80\n        },\n        {\n          prop: 'api_address',\n          label: '地址',\n          width: 260\n        },\n        {\n          prop: 'request_parameter',\n          label: '参数',\n          width: 120\n        },\n        {\n          prop: 'response_text',\n          label: '预期响应信息',\n          width: 100\n        }\n      ],\n    }\n  },\n  methods: {\n    async getList() {\n      let result = await getApiList(this.$store.state.token, this.config.page, this.config.size)\n      if (result.data.code === 0) {\n        this.tableData = result.data.data.rows;\n        this.tableData.forEach(item => {\n          //修改执行列显示内容\n          if (item.is_implement === 1) {\n            item.is_implement = '是'\n          } else {\n            item.is_implement = '否'\n          }\n          //修改类型模块显示内容\n          switch (item.request_type) {\n            case 1:\n              item.request_type = 'GET';\n              break;\n            case 2:\n              item.request_type = 'POST';\n              break;\n            case 3:\n              item.request_type = 'PUT';\n              break;\n            case 4:\n              item.request_type = 'DELETE';\n              break;\n            default:\n              item.request_type = '--';\n              break;\n          }\n          item.type = 'api';\n        })\n\n      }\n    },\n    apiDelete(row) {\n      this.$confirm('删除后无法找回，确定删除吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        let result = await delApiById(this.$store.state.token, row.id)\n        if (result.data.code === 0) {\n          this.$message({\n            type: 'info',\n            message: '删除成功'\n          });\n          this.getList();\n        } else {\n          this.$message({\n            type: 'info',\n            message: '删除失败'\n          });\n        }\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    apiTest(row) {\n      \n    },\n  },\n  created() {\n    this.getList();\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n@import \"~@/assets/scss/testCase.scss\";\n</style>\n<style lang=\"scss\">\n.el-table .warning-row {\n  background: #F39800;\n}\n</style>"]}]}
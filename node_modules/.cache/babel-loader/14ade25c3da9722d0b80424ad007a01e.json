{"remainingRequest":"/Users/finup/WebstormProjects/front-test-platform/node_modules/babel-loader/lib/index.js!/Users/finup/WebstormProjects/front-test-platform/src/api/getData.js","dependencies":[{"path":"/Users/finup/WebstormProjects/front-test-platform/src/api/getData.js","mtime":1648176815577},{"path":"/Users/finup/WebstormProjects/front-test-platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/finup/WebstormProjects/front-test-platform/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/finup/WebstormProjects/front-test-platform/src/api/getData.js"],"names":["axios","loginApi","name","pwd","post","getUserListApi","token","page","size","get","params","userName","headers","addUserApi","mail_box","age","department","position","updateUserApi","id","put","deleteUserApi","delete","getUserByToken","getNotOverTestCase","updateTestCaseReceive","receive","user_name","updateTestCaseIsImportant","is_important","updateTestCase","story_content","association_story_point","git_address","testCaseOver","test_over","insertTestCaseOver","findTestCaseByAssociationStoryPoint","associationStoryPoint","getAnimalListApi","current","disposition","testSituation","annualReport"],"mappings":"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","sourcesContent":["/**\n * 获取相关数据方法整合\n */\nimport axios from './config'\n\n/**\n * 登录接口\n * @param name 用户名\n * @param pwd 密码\n */\nexport const loginApi = (name, pwd) => axios.post('/api/v1/pri/user/login', {\n    name,\n    pwd\n})\n\n/**\n * 获取用户列表\n * @param token\n * @param page 当前页\n * @param size 每页大小\n * @param name 用户名\n */\nexport const getUserListApi = (token, page, size, name) => axios.get('/api/v1/pri/user/user_list', {\n    params: {\n        page: page,\n        size: size,\n        userName: name\n    },\n    headers: {\n        token\n    }\n})\n\n/**\n * 添加用户\n * @param token\n * @param name 用户名\n * @param mail_box 邮箱\n * @param age 年龄\n * @param department 部门\n * @param position 职位\n * @param pwd 密码\n */\nexport const addUserApi = (token, name, mail_box, age, department, position, pwd) => axios.post('/api/v1/pri/user/save_user',\n    {\n        'name': name,\n        'pwd': pwd,\n        'mail_box': mail_box,\n        'age': age,\n        'department': department,\n        'position': position\n    },\n    {\n        headers: {\n            token\n        }\n    }\n)\n\n/**\n * 更新用户\n * @param token\n * @param id 用户ID\n * @param name 用户名\n * @param mail_box 邮箱\n * @param age 年龄\n * @param department 部门\n * @param position 职位\n */\nexport const updateUserApi = (token, id, name, mail_box, age, department, position) => axios.put('/api/v1/pri/user/update_user',\n    {\n        'id': id,\n        'name': name,\n        'mail_box': mail_box,\n        'age': age,\n        'department': department,\n        'position': position\n    },\n    {\n        headers: {\n            token\n        }\n    })\n\n/**\n * 删除用户\n * @param token\n * @param id 用户ID\n */\nexport const deleteUserApi = (token, id) => axios.delete('/api/v1/pri/user/delete_user',\n    {\n        params: {\n            id: id\n        },\n        headers: {\n            token\n        }\n    })\n\n/**\n * 根据Token获取用户信息\n * @param token\n */\nexport const getUserByToken = (token) => axios.get('/api/v1/pri/user/find_by_token',\n    {\n        headers: {\n            token\n        }\n    })\n\n/**\n * 查询未结束的测试任务\n * @param token\n * @param page 当前页\n * @param size 每页大小\n */\nexport const getNotOverTestCase = (token, page, size) => axios.get('/api/v1/pri/story/not_over_case',\n    {\n        params: {\n            page,\n            size\n        },\n        headers: {\n            token\n        }\n    })\n\n/**\n * 更新测试任务领用状态\n * @param token\n * @param id 测试任务ID\n * @param receive 领用状态\n * @param user_name 用户名\n */\nexport const updateTestCaseReceive = (token, id, receive, user_name) => axios.put('/api/v1/pri/story/update_case_by_id',\n    {\n        id: id,\n        receive: receive,\n        user_name: user_name\n    },\n    {\n        headers: {\n            token\n        }\n    })\n\n/**\n * 更新测试任务重要状态\n * @param token\n * @param id 测试任务ID\n * @param is_important 重要程度\n */\nexport const updateTestCaseIsImportant = (token, id, is_important) => axios.put('/api/v1/pri/story/update_case_by_id',\n    {\n        id: id,\n        is_important: is_important\n    },\n    {\n        headers: {\n            token\n        }\n    })\n/**\n * 更新测试任务\n * @param token\n * @param id 测试任务ID\n * @param story_content 故事内容\n * @param association_story_point\n * @param git_address\n * @returns {Promise<AxiosResponse<any>>}\n */\nexport const updateTestCase = (token, id, story_content, association_story_point, git_address) => axios.put('/api/v1/pri/story/update_case_by_id',\n    {\n        id: id,\n        story_content: story_content,\n        association_story_point: association_story_point,\n        git_address: git_address\n    },\n    {\n        headers: {\n            token\n        }\n    })\n\n/**\n * 结束测试任务\n * @param token\n * @param id 测试任务ID\n * @param test_over 结束\n */\nexport const testCaseOver = (token, id, test_over) => axios.put('/api/v1/pri/story/update_case_by_id',\n    {\n        id: id,\n        test_over: test_over\n    },\n    {\n        headers: {\n            token\n        }\n    })\n\n/**\n * 插入新的测试任务\n * @param token\n * @param story_content 故事内容\n * @param association_story_point 关联故事点\n * @param git_address Git地址\n */\nexport const insertTestCaseOver = (token, story_content, association_story_point, git_address) => axios.post('/api/v1/pri/story/insert_test_case',\n    {\n        story_content: story_content,\n        association_story_point: association_story_point,\n        git_address: git_address,\n        receive: 0,\n        test_over: 0,\n        is_important: 0\n    }, {\n        headers: {\n            token\n        }\n    })\n\nexport const findTestCaseByAssociationStoryPoint = (token, associationStoryPoint) => axios.get('/api/v1/pri/story/find_testCase_by_association_story_point',\n    {\n        params:{\n            association_story_point : associationStoryPoint\n        },\n        headers:{\n            token\n        }\n    })\n\n/**\n * 获取小动物列表\n * @param current 当前页\n * @param size 每页大小\n * @param disposition 用户名\n */\nexport const getAnimalListApi = (current, size, disposition) => axios.get('/api/v1/pro/animal_forest_islander/getAll', {\n    params: {\n        current: current,\n        size: size,\n        disposition: disposition\n    }\n})\n\n/**\n * 获取测试状态\n * @param token\n * @returns {Promise<AxiosResponse<any>>}\n */\nexport const testSituation = (token) => axios.get('/api/v1/pri/story/testSituation',\n    {\n        headers:{\n            token\n        }\n    })\n\n/**\n * 获取年内每月数据\n * @param token\n * @returns {Promise<AxiosResponse<any>>}\n */\nexport const annualReport = (token) => axios.get('/api/v1/pri/story/annualReport',\n    {\n        headers:{\n            token\n        }\n    })"]}]}